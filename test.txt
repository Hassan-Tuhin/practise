25/09/2020

concatinate two strings:
first='Hassan'
last=' Tuhin'
1st process:
msg=first+' ['+last+' ] '+'is a coder'
print(msg)
2nd process:
msg=f'{first} [{last}] is a coder'
print(msg)
..........
..........
first='Python For Beginners'
print(len(first))
print(first.upper())
print(first.lower())
print(first.find('y'))
print(first.replace('Beginners','G.H.Tuhin'))
print(first.replace('P','J'))
print('Python' in first)//checked whether the word python is in course variable or not
.............
.............
print(1+2) print(2-1) print(2*2) print(10/2) print(10%3) print(2**3)
x=2.9
print(round(x))
print(abs(-2.9))
..............
..............
For all of these mathematical function search as "python 3 math module"

import math
print(math.ceil(2.9))
print(math.floor(2.9))
print(math.factorial(4))
print(math.fabs(4.678))
print(math.gcd(8,10))
...............
...............
if else
1st_Practise:
is_hot=False //try True here
is_cold=True //try False here
if is_hot:
    print("it's a hot day")
    print("eat plenty water")
elif is_cold:
    print("it's a cold day")
    print("wear warm clothes")
else:
    print("it's a lovely day")
print("enjoy your day")

practise 2:
price=100000
is_good_credit=True
if is_good_credit:
    payment=float(price)*0.1
else:
    payment=float(price)*0.2
print(f'down payment: {payment}')

has_high_income=False
has_good_credit=True
if has_high_income or has_good_credit:
    print("eligible for loan")
else:
    print("not eligible for loan")


weight=int(input("enter your weight: "))
unit=input('(L)bs or (K)kg: ')
if unit.upper()=="L":
    converted=weight*0.45
    print(f'you are  {converted} kilos')
else:
    converted=weight/0.45
    print(f'you are {converted} pounds')

26/09/2020
............
secret_number=9
guess_count=0
guess_limit=3
while guess_count<guess_limit:
    guess=int(input("Guess: "))
    guess_count+=1
    if guess==secret_number:
        print("u won!")
        break
else:
    print("u lose!!!")

.................
................
command=""
while command.lower()!="quit"://or we can write while True
    command=input(">").lower()
    if command=="start":
        print("car started.")
    elif command=="stop":
        print("car stopped")
    elif command=="help":
        print("""
        start:to start car
        stop:to stop car
        quit:to quit system
        """)
    elif command=="quit":
        break
    else:
        print("can't understand command")
    
    27/09/2020
    PRACTISING LIST
    ................
    ................
    for item in 'Python':
    print(item)
    for item in ["hassan","tuhin","Baizid","Tanbir","Yunus"]:
    print(item)
    for item in [1,2,3,4,5,6]:
    print(item)
    for item in range(5):
    print(item)
    for item in range(5,12):
    print(item)
    for item in range(5,12,3):
    print(item)

cost=0
for prices in [10,20,30]:
    cost=cost+prices
print(f'TOtal cost {cost}')
...........
...........
for x in range(4):
    for y in range(4):
        print(f'{x},{y}')
................
numbers=[5,2,5,2,2]
for x_count in numbers:
    output=''
    for count in range (x_count):
        output+='x'
    print(output)
...................
list=[1,2,3,4,5,6,7,8]
max=list[0]
for number in list:
    if number > max:
        max = number
print(f'Largest number is {max}')
...................
matrix=[
    [1,2,3],
    [4,5,6],
    [7,8,9]
]
for row in matrix:
    print(row)
or
matrix=[
    [1,2,3],
    [4,5,6],
    [7,8,9]
]
for row in matrix:
    for item in row:
        print(item)
.................
list=[1,2,3,4,5,6]
list.append(7)
print(list)
try this also...........
list=[1,2,4,5,3]
list[1]=6
print(list)

list.insert(2,7)
list.remove(4)
list.clear() 
list.pop()
print(list.index(3))
list=[1,2,3,4,5,6,3]
print(list.count(3))
..................
list=[3,45,6,1,8,9,10]
list.sort()
print(list)
............
list=[1,1,2,4,5,5,3]
list2=list.copy()
print(list2)
.............
list=[1,2,4,5,3]
list.sort()
list.reverse()
print(list)
.............
removing duplicate numbers:::

list=[1,1,2,4,5,5,3]
unique=[]
for  number in list:
    if number not in unique:
        unique.append(number)
                                    //unique.sort()
print(unique)
.................

PRACTISING TUPPLE
.................
list=(1,2,3)
print(list[1])

it'll be error if we want to change index value like list

list=(1,2,3)
list[1]=4
print(list[1])
 
 coordinates=[1,2,3]
(x,y,z)=coordinates
print(f'y={y}')

Dictionay:
..........
customer={
    "name":"Golam Hassan Tohin",
    "age":23,
    "is_valid":True
}
print(customer["age"])
or,,
print(customer.get("age"))

print(customer.get("birhtdate"))//print an error ior none
print(customer.get("birhtdate","04-05-1998"))
print(f'age:{customer.get("age")}')

Function:
....................
def hello():
    print("Hello Hassan")
    print("Hello Tuhin")
print("function start")
hello() //call the hello function
print("function end")
..........
def hello(name)://here name is a parameter
    print(f'Hii {name}')
    print("welcome")

hello("Tuhin")//we r calling the hello function.
    as there is a parameter so we need to pass it inside
    hello like "Hassan" or we can pass any digit also..
...............
passing two parameter:
def hello(first_name,last_name):
    print(f'Hii {first_name} {last_name}')
    print("welcome")

hello("Hassan","Tuhin")
.................
def square(number):
    return number*number
    
number=int(input('number='))
print(square(number))
.................
try:
    age=int(input('age: '))
    print(age)
except ValueError:
    print("Invalid!!!!")
.................
.................
Class
.....
class Point():
    def move(self):
        print("move")
    def name(self):
        print("pass")

point1=Point()
point1.move()
point1.name()

point1.x=2
point1.y=3
print(point1.x)
..............
CONSTRUCTOR
...........
class Point():
    def __init__(self,x,y):
        self.x=x
        self.y=y
    def move(self):
        print("move")
    def name(self):
        print("pass")

point2=Point(10,20)
print(point2.y)  //watch mosh video in 03:09:10
....................
class Person():
    def __init__(self,name):
        self.name=name
    def talk(self):
        print(f'hi it is {self.name}')

person1=Person("Tuhin") 
person1.talk()
...................

INHERITENCE:::
.............
class Mammal():  #it's the parent class
    def walk(self):
        print("Walk")


class Dog(Mammal):#We pass Mammel here as parent class.so all of the features of Mammal can be used by this class
    def pet(self):
        print("is a pet")


class Cat(Mammal):
    pass

dog=Dog()
dog.walk()#This is Mammal class method & we can ue it here by inheritance
dog.pet()#This is the method of Dog class

cat=Cat()
cat.walk()
..................




